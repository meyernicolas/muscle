################################################################################
################################ PORTFOLIOS 49 #################################
################################################################################

rm(list=ls())
library(rlang)
library(latex2exp) # to insert latex symbols in the plots
setwd("~/Dropbox/recherche/olivier/3_muscle/v4/code/")
source("muscle.R")
# Hill estimator
hill_function <- function(X, k){
  n <- length(X)
  X_order <- sort(X, decreasing = TRUE)
  alpha <- sum(log(X_order[1:k]))/k - log(X_order[k])
  return(1/alpha)
}

##################################### THE DATA ######################################
# Details on the industries can be found on the file 'details_industries.txt'
portfolios <-read.delim("real_data/finance/49_Industry_Portfolios_Daily.txt", sep="", dec=".", header = TRUE)
industries <- colnames(portfolios)
# We restrict the time period to 1970-2019
date_min <- which(rownames(portfolios)==19700102)
date_max <- which(rownames(portfolios)==20191231)
mydata <- t(portfolios[date_min:date_max, ])
d <- nrow(mydata)
n <- ncol(mydata)
mydata <- abs(mydata)

prop <- seq(0.005, 0.18, by = 0.005)

############################### HIGHLIGHTING THE EXTREMES: HILL ################################
K <- 2:1500
hill_mydata <- rep(0, length(K))
norm_mydata<-apply(mydata,2,sum)
for (j in K){
  hill_mydata[j-1] <- hill_function(norm_mydata, K[j-1])
}
plot(K, hill_mydata, type ='l', xlab = "k", ylab = TeX('Hill estimator of $\\alpha$'))
# the curve starts to stabilize around k=800
alpha_mydata <- mean(hill_mydata[800])
alpha_mydata
abline(h = alpha_mydata, lty=3)

variability <- mydata^alpha_mydata


############################ EXTREMAL DIRECTIONS : SOME PLOTS ###############################
result_variab <- muscle_plot(variability, prop)
which_k_variab<- which.min(result_variab[ ,4])
which_k_variab
k_variab <- result_variab[which_k_variab ,1]
k_variab

plot(result_variab[ ,1], result_variab[ ,4], type = "l", ylim = c(0.82, 0.98), xlab = "k", ylab = "penalized log-likelihood")
lines( x=c(k_variab, k_variab), y=c(0, result_variab[ which_k_variab, 4]), lty=3, lwd=2)
lines( x=c(0, k_variab), y=c(result_variab[ which_k_variab, 4], result_variab[ which_k_variab, 4]),
       lty=3, lwd=2)
text(k_variab, 0.92, expression(paste(hat(k)) == 441))

plot(result_variab[ , 1], result_variab[ , 3], type = "l", xlab = "k", ylab = expression(paste(hat(s)(k))))
lines( x=c(k_variab,k_variab), y=c(0,result_variab[ which_k_variab, 3]), lty=3, lwd=2)
lines( x=c(0,k_variab), y=c(result_variab[ which_k_variab, 3],result_variab[ which_k_variab, 3]), lty=3, lwd=2)
text(2*k_variab/3, 22, expression(paste(hat(s)(hat(k)) == 14)))

############################ THE EXTREMAL DIRECTIONS ###############################
directions <- muscle_clusters(variability, prop)
s_hat <- directions[[4]]
s_hat
extr_dir <- directions[[1]][1:d, ] # the faces

extr_portfolios <- list()
for (j in 1:s_hat){
  extr_portfolios[[j]] <- industries[ which(extr_dir[ ,j]==1) ]
}
extr_portfolios


#########################  BEYOND THE EXTREMAL DIRECTIONS ############################
# We remove the extremal directions which appeared and reapply our procedure
non_extremes <- industries[which( apply(extr_dir,1,sum) == 0)]
d_NonExtr <- length(non_extremes)
mydataNonExtr <- mydata[non_extremes, ]

hill_mydataNonExtr <- rep(0, length(K))
norm_mydataNonExtr <- apply(mydataNonExtr,2,sum)
for (j in K){
  hill_mydataNonExtr[j-1] <- hill_function(norm_mydataNonExtr, K[j-1])
}
plot(K, hill_mydataNonExtr, type ='l', col = "blue", xlab = "k", ylab = TeX('Hill estimator of $\\alpha$'))
lines(K, hill_mydata, type ='l', col = "red")


# the curve starts to stabilize around k=800
alpha_mydataNonExtr <- mean(hill_mydataNonExtr[800])
alpha_mydataNonExtr
abline(h = alpha_mydataNonExtr, lty=3)

variability_NonExtr <- mydataNonExtr^alpha_mydataNonExtr

# The non-extremal directions
NonExtr_dir <- muscle_clusters(variability_NonExtr, prop)
s_hat <- NonExtr_dir[[4]]
s_hat
NonExtr_faces <- as.matrix(NonExtr_dir[[1]][1:d_NonExtr, ]) # the faces

NonExtr_portfolios <- list()
for (j in 1:s_hat){
  NonExtr_portfolios[[j]] <- non_extremes[ which(NonExtr_faces[ ,j]==1) ]
}
NonExtr_portfolios

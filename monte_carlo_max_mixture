##########################################################################################
#############################  MONTE CARLO SIMULATIONS ###################################
############################  FOR THE DISTRIBUTION OF Z ##################################
##########################################################################################
rm(list=ls())

## Load code ##
setwd("~/Dropbox/recherche/olivier/3_muscle/v4/code")
source(file = "muscle.R")
library(mvtnorm)
library(evd)

min_l1 <- function(v,z=1){ # the Euclidean projection onto the simplex
  n <- length(v)
  u <- sort(v, TRUE)
  
  su <- cumsum(u)
  rho <- max(which(u > (su-z) / (1:n)))
  theta <- (su[rho] -z) / rho
  w <- pmax(v - theta, 0)
  return(w) 
}

n <- 10^5
d <- 5
nb_faces <- 7
Alpha <- (1:9)/10
set.seed(5678)
directions <- list()

###############################  LOGISTIC DISTRIBUTIONS ##################################
for (r in 1:9){
  alpha <- Alpha[r]
  mixture <- sample(nb_faces, n, replace = TRUE)
  theta <- matrix(rep(NA, n*d), ncol = d)
  
  # the spectral vector theta
  for (i in 1:n){
    if (mixture[i]==1){theta[i,] <- c(1,0,0,0,0)}
    if (mixture[i]==2){theta[i,] <- c(0,1,0,0,0)}
    if (mixture[i]==3){theta[i,] <- c(0,0,0,1,0)}
    if (mixture[i]==4){theta[i,] <- c(0,0,0,0,1)}
    if (mixture[i]==5){
      logis <- rmvevd(1, dep=alpha, model="log", d=3, mar=c(1,1,1))
      theta[i,] <- c(logis/sum(logis),0,0)}
    if (mixture[i]==6){
      logis <- rmvevd(1, dep=alpha, model="log", d=3, mar=c(1,1,1))
      theta[i,] <- c(0,0,logis/sum(logis))
    }
    if (mixture[i]==7){
      logis <- rmvevd(1, dep=alpha, model="log", d=5, mar=c(1,1,1))
      theta[i,] <- logis/sum(logis)
    }
  }
  Y <- 1/runif(n)
  Z <- t(apply(Y*theta, 1, min_l1))
  
  # The vector Z via Monte Carlo simulations and the direction beta
  Z_MC <- (Z > 0)*1
  facesMC <- occ_subsets(t(Z_MC))
  faces_order <- order(facesMC[d+1, ], decreasing = TRUE)
  directions[[r]] <- facesMC[ ,faces_order]
  
  print(r)
}
